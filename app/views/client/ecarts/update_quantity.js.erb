// save values into variables
var product = "<%= params[:product] %>";
var product_prev_cost = parseFloat($("#"+product+"-cost").text().replace(",",""));

// obtain the cost per unit of a product
var cost_per_unit = product_prev_cost/<%= @prev_quantity %>;
// obtain the new cost for that specific product when buying <%= session[:e_cart][params[:product]] %> unit(s)
var product_new_cost = cost_per_unit*<%= session[:e_cart][params[:product]] %>;
$("#"+product+"-cost").text(money_format(product_new_cost.toString()));

var difference = product_prev_cost - product_new_cost;
var current_grand_total = parseFloat($("#order-grand-total").text().replace(",",""));

// calculate the new sub total, shipping_cost and new grand total
var new_sub_total = current_grand_total - difference;
var new_grand_total = new_sub_total;

// update the view
$("#order-sub-total").text(money_format(new_sub_total.toString()));
$("#order-grand-total").text(money_format(new_grand_total.toString()));

<% if @reached_current_existence %>
  var existence = <%= params[:current_existence] %>;
  $("#"+product+"-quantity-input").val(existence);
  <% message = "Solo contamos con #{params[:current_existence]} unidad(es) de este producto." %>
  $("#dismissible_alerts").append(`<%= j render partial: "/shared/dismissible_alert", 
    locals: {message_type: :success, message: message} %>`);
<% end %>

$(".loader-overlay").remove();
